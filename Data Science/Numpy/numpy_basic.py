# -*- coding: utf-8 -*-
"""NumPy Basic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ub8JKX2w7Qnq32rxQt3Mn0_C9KuYq2yw
"""

#import Library NumPy
import numpy as np

"""**Numpy Array**

Array NumPy adalah cara utama kita akan menggunakan Numpy selama kursus. Array Numpy pada dasarnya masuk
dua rasa: vektor dan matriks. Vektor benar-benar array 1-d dan matriks 2-d (tetapi Anda harus mencatat a
matriks masih dapat memiliki hanya satu baris atau satu kolom).

**Membuat Array NumPy**

**Dari Daftar Python**

Kita dapat membuat array dengan langsung mengonversi daftar atau daftar daftar:
"""

#membuat list dengan nama my_list
my_list = [1,2,3]

#membuat array menggunakan Numpy dengan data list my_list
np.array(my_list)

#membuat matriks dengan nama my_matrix
my_matrix = [[1,2,3],[4,5,6],[7,8,9]]

#meng-print hasil my_matrix
my_matrix

#membuat array menggunakan NumPy dengan data matriks my_matrix
np.array(my_matrix)

"""**Metode Bawaan**

Ada banyak cara bawaan untuk menghasilkan Array

**mengatur**

Mengembalikan nilai dengan jarak yang sama dalam interval tertentu.
"""

#membuat fungsi arange dengan awalan 1 sampai kurang dari 5 dengan kelipatan 2
np.arange(1,5,2)

#membuat fungsi arange dengan awalan 1 sampai dengan 10
np.arange(1,10)

#membuat fungsi arange dengan awalan 1 samapi kurang dari 10 dengan kelipatan 0.5
np.arange(1,10,0.5)

"""**Fungsi zeros and ones**

membuat array zeros dan ones
"""

#membuat fungsi zeros
np.zeros(3)

#membuat matriks 5x5 dengan fungsi zeros
np.zeros((5,5))

#membuat fungsi ones
np.ones(3)

#membuat matriks 3x3 dengan fungsi ones
np.ones((3,3))

"""**linspace**


Mengembalikan angka dengan jarak yang sama selama interval yang ditentukan.
"""

#membuat array dengan nilai 1 sampai dengan 10 dengan jumlah 20
np.linspace(1,10,20)

#membuat array dengan nilai 1 sampai dengan 100 dengan jumlah 25
np.linspace(1,100,25)

#membuat array dengan nilai 1 sampai dengan 1000 dengan jumlah default 50
np.linspace(1,1000)

"""**Fungsi Eye**

Membuat matriks identitas
"""

#membuat matrik identitas 4x4 dengan fungsi eye
np.eye(4)

"""**Random**

Numpy also has lots of ways to create random number arrays:

***rand***

Create an array of the given shape and populate it with random samples from a uniform distribution over [0,
1) .

"""

#membuat random nilai sebanyak 5 dengan randint (random integer) yang berarti nilai randomnya ber tipe data integer 
np.random.randint(1,10,5)

#membuat random nilai sebanyak 10 dengan randint (random integer) yang berarti nilai randomnya ber tipe data integer. mulai dari 5 sampai dengan 10 
np.random.randint(5,10,10)

"""**randn**

Kembalikan sampel (atau sampel) dari distribusi "standar normal". Tidak seperti rand yang seragam:
"""

#membuat random nilai matriks 5x5 dengan randn (random dengan tipe data float)
np.random.randn(5,5)

"""**Array Attributes and Methods**

Mari kita bahas beberapa atribut dan metode atau array yang berguna:
"""

#membuat variabel X dengan fungsi arange sebanyak 10
x = np.arange(10)
print(x)

"""**Reshape**

Mengembalikan array yang berisi data yang sama dengan bentuk baru.
"""

#membuat fungsi reshape dengan nilai x yang ada di sebelumnya
x.reshape(5,2)

"""**max,min,argmax,argmin**

Ini adalah metode yang berguna untuk menemukan nilai maks atau min. Atau untuk menemukan lokasi indeks mereka menggunakan argmin atau argmax
"""

#mencari nilai maksimal dari X
x.max()

#mencari nilai minimal dari X
x.min()

#membuat array random dengan fungsi randn untuk variabel Y 
y = np.random.rand(5)
y

#mencari nilai maksimal dari y
y.max()

#mecari index dari nilai maksimal
y.argmax()

#membuat matriks dengan fungsi random randn untuk variabel z
z = np.random.rand(3,3)
z

#mencari nilai maksimal untuk variabel z
z.max()

#mencari index dari nilai maksimal
z.argmax()

#mencari nilai minimal
z.min()

#mencari index dari nilai minimal
z.argmin()

#mencari type data dari variabel Z
z.dtype

#mencari type data dari variabel Y
y.dtype

#mencari type data dari variabel X
x.dtype

#randn : desimal (+/-)
#rand : desimal (+)
#randint : bilangan bulat

arr = np.random.rand(5)

arr

arr[2]

arr[0:2]

arr[1:4]=10
arr

potongan_arr = arr[1:4]

potongan_arr

arr

potongan_arr[:]=100
potongan_arr

arr

potongan_arr[1:2]=50
potongan_arr

arr

matriks = np.array([[11,12,13],[21,22,23],[31,32,33]])
matriks

matriks[1:3]

matriks[1][2]

matriks[2][1]

x

#boolean
x > 5

var1 = np.array([4,5,6])

var2 = np.array([7,8,9])

var1+var2

var3 = np.arange(10)

var3

var3.reshape(2,5)

var4 = np.arange(10,20)

var4

var4.reshape(2,5)

var5 = var3+var4
var5

var5.reshape(2,5)

